package com.clubank.device;

import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.AdapterView;
import android.widget.GridView;

import com.clubank.View.AlertDialog;
import com.clubank.View.ListViewInScrollView;
import com.clubank.device.op.ProcessDoc;
import com.clubank.device.op.ProcessView;
import com.clubank.dingxi.R;
import com.clubank.domain.BC;
import com.clubank.domain.C;
import com.clubank.domain.ImageDispProp;
import com.clubank.domain.Result;
import com.clubank.domain.User;
import com.clubank.util.MyAsyncTask;
import com.clubank.util.MyData;
import com.clubank.util.MyRow;
import com.clubank.util.UI;

/**
 * 活动申请详情
 */
public class ApplyDetailActivity extends CamareAndCropActivity implements AdapterView.OnItemClickListener {
    private MyData picData, approvesData;//图片资料 审批人
    private SelectPicAdapter picAdapter;
    private ApprovesDetailAdapter approveAdapter;
    private MyRow row;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_apply_detail);
        initView();
    }

    private void initView() {
        picData = new MyData();
        approvesData = new MyData();
        GridView gridView = findViewById(R.id.pics_gridView);
        picAdapter = new SelectPicAdapter(this, picData);
        gridView.setAdapter(picAdapter);
        gridView.setOnItemClickListener(this);

        ListViewInScrollView list = findViewById(R.id.approves_list);
        approveAdapter = new ApprovesDetailAdapter(this, approvesData);
        list.setAdapter(approveAdapter);
        refreshData();
    }

    @Override
    public void refreshData() {
        super.refreshData();
        new MyAsyncTask(this, ProcessView.class).run(getIntent().getStringExtra("processid"));
    }

    @Override
    public void onPostExecute(Class<?> op, Result result) {
        super.onPostExecute(op, result);
        if (op == ProcessView.class) {
            if (result.code == BC.SUCCESS) {
                row = (MyRow) result.obj;
                setDetails();
            } else {
                UI.showToast(this, result.msg);
            }
        }
    }

    private void setDetails() {
        MyRow details = ((MyData) row.get("Process")).get(0);
        MyData pics = (MyData) row.get("Docs");
        MyData steps = (MyData) row.get("Step");

        setEText(R.id.active_title, details.getString("ProcessName"));
        setEText(R.id.start_time, details.getString("StartTime"));
        setEText(R.id.end_time, details.getString("EndTime"));
        setEText(R.id.active_place, details.getString("Address"));
        setEText(R.id.active_detail, details.getString("ProcessDetail"));

        for (MyRow r : pics) {
            picAdapter.add(r);
        }
        picAdapter.notifyDataSetChanged();

        for (MyRow rr : steps) {
            approveAdapter.add(rr);
        }
        approveAdapter.notifyDataSetChanged();
    }

    public void doWork(View view) {
        switch (view.getId()) {
            case R.id.cancel_apply://取消申请
                showAlert(0);
                break;
            case R.id.modify_apply://修改申请
                showAlert(1);
                break;
        }
    }

    public void showAlert(final int type) {//0 取消申请  1修改申请
        final AlertDialog ad = new AlertDialog(this);
        if (type == 0) {
            String tips = getString(R.string.apply_cancel_tip) + "\n" + getString(R.string.apply_cancel_tip1);
            ad.setTitleAndMsg(getString(R.string.cancel_apply), tips);
        } else if (type == 1) {
            String tips = getString(R.string.apply_modify_tip) + "\n" + getString(R.string.apply_modify_tip1);
            ad.setTitleAndMsg(getString(R.string.modify_apply), tips);
        }

        ad.setNegativeButton("取消", 0, 0, new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ad.dismiss();
            }
        });
        ad.setPositiveButton("确认", 0, 0, new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (type == 0) {
                    //                new MyAsyncTask(this, ProcessView.class).run(getIntent().getStringExtra("processid"));
                } else if (type == 1) {
                    Bundle b = new Bundle();
                    b.putSerializable("row", row);
                    openIntent(ActiveApplyActivity.class, R.string.active_apply, b);
                    ad.dismiss();
                    finish();
                }
            }
        });
    }

    @Override
    protected void doUploadImage(String tmpfile, Bitmap small) {
        super.doUploadImage(tmpfile, small);
        new MyAsyncTask(this, ProcessDoc.class).run("");
    }

    @Override
    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
        MyRow r = (MyRow) adapterView.getItemAtPosition(i);
        final Intent in = new Intent(this, ImageLargeActivity.class);
        ImageDispProp prop = new ImageDispProp();
        prop.baseImageUrl = r.getString("picUrl");
//                prop.largePicCol = "LargePicture";
//                prop.smallPicCol = "";
//                prop.captionFormat = "%s";
//                prop.captionCols = "Name";
        prop.closeOnClickImage = true;
        prop.showName = true;
        Bundle b = new Bundle();
        b.putSerializable("data", picData);
        b.putSerializable("prop", prop);
        in.putExtras(b);
        in.putExtra("pos", i);
        startActivity(in);
    }
}



