package com.clubank.device;

import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.ImageView;

import com.clubank.device.op.GetLoginCheckCode;
import com.clubank.device.op.MobileNoLogin;
import com.clubank.dingxi.R;
import com.clubank.domain.BC;
import com.clubank.domain.Result;
import com.clubank.domain.User;
import com.clubank.util.MyAsyncTask;
import com.clubank.util.UI;

/**
 * 登录
 */
public class LoginActivity extends VerifyCodeActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        btnAsk = findViewById(R.id.btn_verify);
        ImageView photoBg = findViewById(R.id.bg_top);
        photoBg.setLayoutParams(new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, screen.getHeight() / 4));
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {//状态栏透明
            Window window = getWindow();
            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
            window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
            window.setStatusBarColor(Color.TRANSPARENT);
            int statusBarHeight = -1;
            //获取status_bar_height资源的ID
            int resourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
            if (resourceId > 0) {
                //根据资源ID获取响应的尺寸值
                statusBarHeight = getResources().getDimensionPixelSize(resourceId);
                findViewById(R.id.status_view).setMinimumHeight(statusBarHeight);
            } else {
                statusBarHeight = UI.toPixel(this, 24);
                findViewById(R.id.status_view).setMinimumHeight(statusBarHeight);
            }
        }
    }


    @Override
    public void doWork(View view) {
        super.doWork(view);
        switch (view.getId()) {
            case R.id.btn_login:
                if (TextUtils.isEmpty(getEText(R.id.member_phone))) {
                    UI.showToast(this, "请输入手机号");
                    return;
                }
                if (!UI.checkMobile(getEText(R.id.member_phone))) {
                    UI.showToast(this, "无效手机号！");
                    findViewById(R.id.member_phone).requestFocus();
                    return;
                }
                if (TextUtils.isEmpty(getEText(R.id.member_num))) {
                    UI.showToast(this, "请输入验证码!");
                    findViewById(R.id.member_num).requestFocus();
                    return;
                }
                new MyAsyncTask(this, MobileNoLogin.class).run(getEText(R.id.member_phone), getEText(R.id.member_num));
                break;
            case R.id.btn_verify:
                if (TextUtils.isEmpty(getEText(R.id.member_phone))) {
                    UI.showToast(this, "请输入手机号！");
                    return;
                }
                new MyAsyncTask(this, GetLoginCheckCode.class).run(getEText(R.id.member_phone));
                break;
            case R.id.call:
//                call("18888888888");
                break;
        }
    }

    @Override
    public void onPostExecute(Class<?> op, Result result) {
        super.onPostExecute(op, result);
        if (op == MobileNoLogin.class) {
            if (result.code == BC.SUCCESS) {
                String data = result.obj.toString();
                User user = User.getIn();
                user.setToken(data);
                saveSetting("Token", data);
                resetAsk();
                openIntent(MainActivity.class, R.string.app_name);
                finish();
            } else {
                UI.showToast(this, result.msg);
            }
        } else if (op == GetLoginCheckCode.class) {
            if (result.code == BC.SUCCESS) {
                disableAskButton();
                UI.showToast(this, result.msg);
            } else {
                UI.showToast(this, result.msg);
            }
        }
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        finishApp();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            finishApp();
            return true;
        }
        return super.onKeyDown(keyCode, event);
    }

    private void finishApp() {
        app.finishAllActivites();
    }
}
