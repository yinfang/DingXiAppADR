/*
 * Copyright (C) 2012 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.clubank.device;

import android.annotation.TargetApi;
import android.content.Context;
import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.SimpleOnPageChangeListener;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;

import com.bumptech.glide.Glide;
import com.clubank.ZoomPhotoView.PhotoView;
import com.clubank.dingxi.R;
import com.clubank.domain.ImageDispProp;
import com.clubank.util.MyData;
import com.clubank.util.U;

import java.util.ArrayList;
import java.util.List;

/**
 * ViewPager + 可缩放的PhotoView
 */

public class ImageLargeActivity extends BaseActivity implements OnClickListener {

    private List<View> views = new ArrayList();
    private MyData data;

    @TargetApi(11)
    @Override
    public void onCreate(Bundle savedInstanceState) {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        super.onCreate(savedInstanceState);
        setContentView(R.layout.image_pager);
        setHeaderTitle("申请资料");
        setEText(com.clubank.common.R.id.header_title, getIntent().getStringExtra("title"));
        Bundle b = getIntent().getExtras();
        data = U.getData(b, "data");
        int pos = b.getInt("pos");
        setEText(R.id.total, "" + data.size());
        ViewPager viewPager = findViewById(R.id.view_pager);
        viewPager.setPageMargin((int) getResources().getDimension(
                com.clubank.common.R.dimen.image_detail_pager_margin));
        viewPager.setOnPageChangeListener(new MyPageChangeListener());
        viewPager.setOffscreenPageLimit(2);
//        getWindow().addFlags(LayoutParams.FLAG_FULLSCREEN);
        for (int i = 0; i < data.size(); i++) {
            // View v = getLayoutInflater().inflate(R.layout.ad_banner, null);
            PhotoView v = new PhotoView(this);
            v.setScaleType(ScaleType.FIT_CENTER);
            v.setBackgroundColor(Color.TRANSPARENT);
            views.add(v);
        }
        SamplePagerAdapter adapter = new SamplePagerAdapter(this, views);
        viewPager.setAdapter(adapter);
        viewPager.setCurrentItem(pos);
        if (data.size() > 0) {
            showPage(pos);
        }

    }

    class MyPageChangeListener extends SimpleOnPageChangeListener {

        @Override
        public void onPageSelected(int pos) {
            super.onPageSelected(pos);
            showPage(pos);
        }
    }

    void showPage(int pos) {
        PhotoView iv = (PhotoView) views.get(pos);
        if (data.size() > 0) {
            String large = data.get(pos).getString("Path");
            Glide.with(ImageLargeActivity.this).load(large).into(iv);
//            setImage(iv, large);
        }
        setEText(R.id.pos, "" + (pos + 1));
        iv.setOnClickListener(this);
    }

    public void onClick(View v) {
        finish();
    }

    class SamplePagerAdapter extends PagerAdapter {
        private List<View> views;
        Context context;

        public SamplePagerAdapter(Context context, List<View> views) {
            this.views = views;
            this.context = context;
        }

        @Override
        public int getCount() {
            return views.size();
        }

        @Override
        public View instantiateItem(ViewGroup container, int position) {
            View view = views.get(position);
            container.addView(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup
                    .LayoutParams.MATCH_PARENT);
           /* PhotoView photoView = new PhotoView(container.getContext());
            container.addView(photoView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup
                    .LayoutParams.MATCH_PARENT);
            Glide.with(ImageLargeActivity.this).load(data.get(position).getString("Path")).into(view);*/
            return view;
        }

        @Override
        public void destroyItem(ViewGroup container, int position, Object object) {
            container.removeView(views.get(position));
        }

        @Override
        public boolean isViewFromObject(View view, Object object) {
            return view == object;
        }

    }
}
