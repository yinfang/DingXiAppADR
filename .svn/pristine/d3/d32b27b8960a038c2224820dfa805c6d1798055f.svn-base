package com.clubank.device;

import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;

import com.bumptech.glide.Glide;
import com.clubank.ZoomPhotoView.PhotoView;
import com.clubank.dingxi.R;
import com.clubank.domain.ImageDispProp;
import com.clubank.util.MyData;
import com.clubank.util.U;

public class ImageLargerActivity extends BaseActivity {

    private MyData data;
    private ImageDispProp prop;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        super.onCreate(savedInstanceState);
        setContentView(R.layout.image_pager);
        Bundle b = getIntent().getExtras();
        data = U.getData(b, "data");
        int pos = b.getInt("pos");
        prop = (ImageDispProp) b.getSerializable("prop");
      /*  ViewPager viewPager = findViewById(R.id.view_pager);

        viewPager.setAdapter(new SamplePagerAdapter());
        viewPager.setCurrentItem(pos);*/
    }


    class SamplePagerAdapter extends PagerAdapter {


        @Override
        public int getCount() {
            return data == null ? 0 : data.size();
        }

        @Override
        public View instantiateItem(ViewGroup container, int position) {
            PhotoView photoView = new PhotoView(container.getContext());
//            photoView.setImageResource();
            // Now just add PhotoView to ViewPager and return it
            container.addView(photoView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup
                    .LayoutParams.MATCH_PARENT);

            Glide.with(ImageLargerActivity.this).load(data.get(position).getString(prop
                    .largePicCol)).into(photoView);
            return photoView;
        }

        @Override
        public void destroyItem(ViewGroup container, int position, Object object) {
            container.removeView((View) object);
        }

        @Override
        public boolean isViewFromObject(View view, Object object) {
            return view == object;
        }

    }


}
