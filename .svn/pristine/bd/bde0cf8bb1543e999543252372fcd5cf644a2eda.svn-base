package com.clubank.device;

import android.os.Bundle;
import android.view.View;
import android.widget.ListView;

import com.clubank.device.op.LessonBookings;
import com.clubank.device.op.LessonConfirm;
import com.clubank.dingxi.R;
import com.clubank.domain.BC;
import com.clubank.domain.Criteria;
import com.clubank.domain.MainTabEntity;
import com.clubank.domain.Result;
import com.clubank.util.MyAsyncTask;
import com.clubank.util.MyData;
import com.clubank.util.MyRow;
import com.clubank.util.UI;
import com.flyco.tablayout.CommonTabLayout;
import com.flyco.tablayout.listener.CustomTabEntity;
import com.flyco.tablayout.listener.OnTabSelectListener;

import java.util.ArrayList;

/**
 * 预约记录
 */
public class BookingRecordListActivity extends BaseActivity implements OnTabSelectListener {
    private CommonTabLayout commonTabLayout;
    private ArrayList<CustomTabEntity> tabs = new ArrayList<>();
    private BookingRecordListAdapter adapter;
    private MyData data;
    private ListView list;
    private Criteria criteria;
    private int status = 0;//状态0全部 1.未确认 2.已确认 3.已取消 4.已拒绝

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_class_order_list);
        tabs.add(new MainTabEntity("全部", R.mipmap.ic_launcher, R.mipmap.ic_launcher));
        tabs.add(new MainTabEntity("未确认", R.mipmap.ic_launcher, R.mipmap.ic_launcher));
        tabs.add(new MainTabEntity("已确认", R.mipmap.ic_launcher, R.mipmap.ic_launcher));
        tabs.add(new MainTabEntity("已签课", R.mipmap.ic_launcher, R.mipmap.ic_launcher));
        tabs.add(new MainTabEntity("已取消", R.mipmap.ic_launcher, R.mipmap.ic_launcher));
        commonTabLayout = findViewById(R.id.tablayout);
        commonTabLayout.setTabData(tabs);
        commonTabLayout.setOnTabSelectListener(this);
        data = new MyData();
        criteria = new Criteria();
        list = findViewById(R.id.list);
        adapter = new BookingRecordListAdapter(this, data);
        initList(list, adapter, criteria, LessonBookings.class);
        addEmptyView(list);
        refreshData();
    }

    @Override
    public void refreshData() {
        super.refreshData();
        new MyAsyncTask(this, LessonBookings.class).run(status, criteria);
    }

    @Override
    public void onPostExecute(Class<?> op, Result result) {
        super.onPostExecute(op, result);
        if (op == LessonBookings.class) {
            if (result.code == BC.SUCCESS) {
                data = (MyData) result.obj;
                if (data.size() > 0) {
                    for (MyRow ro : data) {
                        adapter.add(ro);
                    }
                    adapter.notifyDataSetChanged();
                    return;
                }
                    show(R.id.emptyview);
            } else {
                UI.showToast(this, result.msg);
            }
        } else if (op == LessonConfirm.class) {
            if (result.code == BC.SUCCESS) {
                UI.showToast(this, result.msg);
                criteria = new Criteria();
                refreshData(true, LessonBookings.class);
            } else {
                UI.showToast(this, result.msg);
            }
        }
    }

    public void doWork(View view) {
        int pos = (int) view.getTag();
        MyRow row = data.get(pos);
        int aid = row.getInt("AID");
        switch (view.getId()) {
            case R.id.sure_class://确认约课
                new MyAsyncTask(this, LessonConfirm.class).run(aid);
                break;
            case R.id.cancel_class://取消约课
                new MyAsyncTask(this, LessonConfirm.class).run(aid);
                break;
        }
    }

    @Override
    public void onTabSelect(int position) {
        switch (position) {
            case 0:
                status = 0;
                break;
            case 1:
                status = 1;
                break;
            case 2:
                status = 2;
                break;
            case 3:
                status = 4;
                break;
            case 4:
                status = 3;
                break;
        }
        criteria = new Criteria();
        refreshData(true, LessonBookings.class);
    }

    @Override
    public void onTabReselect(int position) {

    }
}
